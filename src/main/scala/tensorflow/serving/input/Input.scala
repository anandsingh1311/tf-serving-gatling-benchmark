// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tensorflow.serving.input

@SerialVersionUID(0L)
final case class Input(
    kind: tensorflow.serving.input.Input.Kind = tensorflow.serving.input.Input.Kind.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[Input] with scalapb.lenses.Updatable[Input] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (kind.exampleList.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(kind.exampleList.get.serializedSize) + kind.exampleList.get.serializedSize }
      if (kind.exampleListWithContext.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(kind.exampleListWithContext.get.serializedSize) + kind.exampleListWithContext.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      kind.exampleList.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      kind.exampleListWithContext.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tensorflow.serving.input.Input = {
      var __kind = this.kind
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __kind = tensorflow.serving.input.Input.Kind.ExampleList(_root_.scalapb.LiteParser.readMessage(_input__, kind.exampleList.getOrElse(tensorflow.serving.input.ExampleList.defaultInstance)))
          case 18 =>
            __kind = tensorflow.serving.input.Input.Kind.ExampleListWithContext(_root_.scalapb.LiteParser.readMessage(_input__, kind.exampleListWithContext.getOrElse(tensorflow.serving.input.ExampleListWithContext.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      tensorflow.serving.input.Input(
          kind = __kind
      )
    }
    def getExampleList: tensorflow.serving.input.ExampleList = kind.exampleList.getOrElse(tensorflow.serving.input.ExampleList.defaultInstance)
    def withExampleList(__v: tensorflow.serving.input.ExampleList): Input = copy(kind = tensorflow.serving.input.Input.Kind.ExampleList(__v))
    def getExampleListWithContext: tensorflow.serving.input.ExampleListWithContext = kind.exampleListWithContext.getOrElse(tensorflow.serving.input.ExampleListWithContext.defaultInstance)
    def withExampleListWithContext(__v: tensorflow.serving.input.ExampleListWithContext): Input = copy(kind = tensorflow.serving.input.Input.Kind.ExampleListWithContext(__v))
    def clearKind: Input = copy(kind = tensorflow.serving.input.Input.Kind.Empty)
    def withKind(__v: tensorflow.serving.input.Input.Kind): Input = copy(kind = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => kind.exampleList.orNull
        case 2 => kind.exampleListWithContext.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => kind.exampleList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => kind.exampleListWithContext.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = tensorflow.serving.input.Input
}

object Input extends scalapb.GeneratedMessageCompanion[tensorflow.serving.input.Input] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tensorflow.serving.input.Input] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): tensorflow.serving.input.Input = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    tensorflow.serving.input.Input(
      kind = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[tensorflow.serving.input.ExampleList]].map(tensorflow.serving.input.Input.Kind.ExampleList)
    .orElse[tensorflow.serving.input.Input.Kind](__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[tensorflow.serving.input.ExampleListWithContext]].map(tensorflow.serving.input.Input.Kind.ExampleListWithContext))
    .getOrElse(tensorflow.serving.input.Input.Kind.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tensorflow.serving.input.Input] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      tensorflow.serving.input.Input(
        kind = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[tensorflow.serving.input.ExampleList]]).map(tensorflow.serving.input.Input.Kind.ExampleList)
    .orElse[tensorflow.serving.input.Input.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[tensorflow.serving.input.ExampleListWithContext]]).map(tensorflow.serving.input.Input.Kind.ExampleListWithContext))
    .getOrElse(tensorflow.serving.input.Input.Kind.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = InputProto.javaDescriptor.getMessageTypes.get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = InputProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = tensorflow.serving.input.ExampleList
      case 2 => __out = tensorflow.serving.input.ExampleListWithContext
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tensorflow.serving.input.Input(
  )
  sealed trait Kind extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isExampleList: _root_.scala.Boolean = false
    def isExampleListWithContext: _root_.scala.Boolean = false
    def exampleList: scala.Option[tensorflow.serving.input.ExampleList] = None
    def exampleListWithContext: scala.Option[tensorflow.serving.input.ExampleListWithContext] = None
  }
  object Kind extends {
    @SerialVersionUID(0L)
    case object Empty extends tensorflow.serving.input.Input.Kind {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class ExampleList(value: tensorflow.serving.input.ExampleList) extends tensorflow.serving.input.Input.Kind {
      type ValueType = tensorflow.serving.input.ExampleList
      override def isExampleList: _root_.scala.Boolean = true
      override def exampleList: scala.Option[tensorflow.serving.input.ExampleList] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class ExampleListWithContext(value: tensorflow.serving.input.ExampleListWithContext) extends tensorflow.serving.input.Input.Kind {
      type ValueType = tensorflow.serving.input.ExampleListWithContext
      override def isExampleListWithContext: _root_.scala.Boolean = true
      override def exampleListWithContext: scala.Option[tensorflow.serving.input.ExampleListWithContext] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  implicit class InputLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tensorflow.serving.input.Input]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tensorflow.serving.input.Input](_l) {
    def exampleList: _root_.scalapb.lenses.Lens[UpperPB, tensorflow.serving.input.ExampleList] = field(_.getExampleList)((c_, f_) => c_.copy(kind = tensorflow.serving.input.Input.Kind.ExampleList(f_)))
    def exampleListWithContext: _root_.scalapb.lenses.Lens[UpperPB, tensorflow.serving.input.ExampleListWithContext] = field(_.getExampleListWithContext)((c_, f_) => c_.copy(kind = tensorflow.serving.input.Input.Kind.ExampleListWithContext(f_)))
    def kind: _root_.scalapb.lenses.Lens[UpperPB, tensorflow.serving.input.Input.Kind] = field(_.kind)((c_, f_) => c_.copy(kind = f_))
  }
  final val EXAMPLE_LIST_FIELD_NUMBER = 1
  final val EXAMPLE_LIST_WITH_CONTEXT_FIELD_NUMBER = 2
}
