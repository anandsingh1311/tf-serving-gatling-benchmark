// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.tensorflow.framework.attr_value

/** Protocol buffer representing the value for an attr used to configure an Op.
  * Comment indicates the corresponding attr type.  Only the field matching the
  * attr type may be filled.
  */
@SerialVersionUID(0L)
final case class AttrValue(
    value: org.tensorflow.framework.attr_value.AttrValue.Value = org.tensorflow.framework.attr_value.AttrValue.Value.Empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[AttrValue] with scalapb.lenses.Updatable[AttrValue] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (value.s.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, value.s.get) }
      if (value.i.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, value.i.get) }
      if (value.f.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(4, value.f.get) }
      if (value.b.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, value.b.get) }
      if (value.`type`.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, value.`type`.get.value) }
      if (value.shape.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.shape.get.serializedSize) + value.shape.get.serializedSize }
      if (value.tensor.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.tensor.get.serializedSize) + value.tensor.get.serializedSize }
      if (value.list.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.list.get.serializedSize) + value.list.get.serializedSize }
      if (value.func.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(value.func.get.serializedSize) + value.func.get.serializedSize }
      if (value.placeholder.isDefined) { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, value.placeholder.get) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      value.list.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.s.foreach { __v =>
        _output__.writeBytes(2, __v)
      };
      value.i.foreach { __v =>
        _output__.writeInt64(3, __v)
      };
      value.f.foreach { __v =>
        _output__.writeFloat(4, __v)
      };
      value.b.foreach { __v =>
        _output__.writeBool(5, __v)
      };
      value.`type`.foreach { __v =>
        _output__.writeEnum(6, __v.value)
      };
      value.shape.foreach { __v =>
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.tensor.foreach { __v =>
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      value.placeholder.foreach { __v =>
        _output__.writeString(9, __v)
      };
      value.func.foreach { __v =>
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.attr_value.AttrValue = {
      var __value = this.value
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 18 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.S(_input__.readBytes())
          case 24 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.I(_input__.readInt64())
          case 37 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.F(_input__.readFloat())
          case 40 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.B(_input__.readBool())
          case 48 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.Type(org.tensorflow.framework.types.DataType.fromValue(_input__.readEnum()))
          case 58 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.Shape(_root_.scalapb.LiteParser.readMessage(_input__, value.shape.getOrElse(org.tensorflow.framework.tensor_shape.TensorShapeProto.defaultInstance)))
          case 66 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.Tensor(_root_.scalapb.LiteParser.readMessage(_input__, value.tensor.getOrElse(org.tensorflow.framework.tensor.TensorProto.defaultInstance)))
          case 10 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.List(_root_.scalapb.LiteParser.readMessage(_input__, value.list.getOrElse(org.tensorflow.framework.attr_value.AttrValue.ListValue.defaultInstance)))
          case 82 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.Func(_root_.scalapb.LiteParser.readMessage(_input__, value.func.getOrElse(org.tensorflow.framework.attr_value.NameAttrList.defaultInstance)))
          case 74 =>
            __value = org.tensorflow.framework.attr_value.AttrValue.Value.Placeholder(_input__.readString())
          case tag => _input__.skipField(tag)
        }
      }
      org.tensorflow.framework.attr_value.AttrValue(
          value = __value
      )
    }
    def getS: _root_.com.google.protobuf.ByteString = value.s.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withS(__v: _root_.com.google.protobuf.ByteString): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.S(__v))
    def getI: _root_.scala.Long = value.i.getOrElse(0L)
    def withI(__v: _root_.scala.Long): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.I(__v))
    def getF: _root_.scala.Float = value.f.getOrElse(0.0f)
    def withF(__v: _root_.scala.Float): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.F(__v))
    def getB: _root_.scala.Boolean = value.b.getOrElse(false)
    def withB(__v: _root_.scala.Boolean): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.B(__v))
    def getType: org.tensorflow.framework.types.DataType = value.`type`.getOrElse(org.tensorflow.framework.types.DataType.DT_INVALID)
    def withType(__v: org.tensorflow.framework.types.DataType): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Type(__v))
    def getShape: org.tensorflow.framework.tensor_shape.TensorShapeProto = value.shape.getOrElse(org.tensorflow.framework.tensor_shape.TensorShapeProto.defaultInstance)
    def withShape(__v: org.tensorflow.framework.tensor_shape.TensorShapeProto): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Shape(__v))
    def getTensor: org.tensorflow.framework.tensor.TensorProto = value.tensor.getOrElse(org.tensorflow.framework.tensor.TensorProto.defaultInstance)
    def withTensor(__v: org.tensorflow.framework.tensor.TensorProto): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Tensor(__v))
    def getList: org.tensorflow.framework.attr_value.AttrValue.ListValue = value.list.getOrElse(org.tensorflow.framework.attr_value.AttrValue.ListValue.defaultInstance)
    def withList(__v: org.tensorflow.framework.attr_value.AttrValue.ListValue): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.List(__v))
    def getFunc: org.tensorflow.framework.attr_value.NameAttrList = value.func.getOrElse(org.tensorflow.framework.attr_value.NameAttrList.defaultInstance)
    def withFunc(__v: org.tensorflow.framework.attr_value.NameAttrList): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Func(__v))
    def getPlaceholder: _root_.scala.Predef.String = value.placeholder.getOrElse("")
    def withPlaceholder(__v: _root_.scala.Predef.String): AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Placeholder(__v))
    def clearValue: AttrValue = copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Empty)
    def withValue(__v: org.tensorflow.framework.attr_value.AttrValue.Value): AttrValue = copy(value = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => value.s.orNull
        case 3 => value.i.orNull
        case 4 => value.f.orNull
        case 5 => value.b.orNull
        case 6 => value.`type`.map(_.javaValueDescriptor).orNull
        case 7 => value.shape.orNull
        case 8 => value.tensor.orNull
        case 1 => value.list.orNull
        case 10 => value.func.orNull
        case 9 => value.placeholder.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => value.s.map(_root_.scalapb.descriptors.PByteString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => value.i.map(_root_.scalapb.descriptors.PLong).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => value.f.map(_root_.scalapb.descriptors.PFloat).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => value.b.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => value.`type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => value.shape.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => value.tensor.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 1 => value.list.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => value.func.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => value.placeholder.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.tensorflow.framework.attr_value.AttrValue
}

object AttrValue extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.attr_value.AttrValue] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.attr_value.AttrValue] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.tensorflow.framework.attr_value.AttrValue = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.tensorflow.framework.attr_value.AttrValue(
      value = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[_root_.com.google.protobuf.ByteString]].map(org.tensorflow.framework.attr_value.AttrValue.Value.S)
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[_root_.scala.Long]].map(org.tensorflow.framework.attr_value.AttrValue.Value.I))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[_root_.scala.Float]].map(org.tensorflow.framework.attr_value.AttrValue.Value.F))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[_root_.scala.Boolean]].map(org.tensorflow.framework.attr_value.AttrValue.Value.B))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => org.tensorflow.framework.attr_value.AttrValue.Value.Type(org.tensorflow.framework.types.DataType.fromValue(__e.getNumber))))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[org.tensorflow.framework.tensor_shape.TensorShapeProto]].map(org.tensorflow.framework.attr_value.AttrValue.Value.Shape))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[org.tensorflow.framework.tensor.TensorProto]].map(org.tensorflow.framework.attr_value.AttrValue.Value.Tensor))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[org.tensorflow.framework.attr_value.AttrValue.ListValue]].map(org.tensorflow.framework.attr_value.AttrValue.Value.List))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[org.tensorflow.framework.attr_value.NameAttrList]].map(org.tensorflow.framework.attr_value.AttrValue.Value.Func))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(__fields.get(9)).asInstanceOf[scala.Option[_root_.scala.Predef.String]].map(org.tensorflow.framework.attr_value.AttrValue.Value.Placeholder))
    .getOrElse(org.tensorflow.framework.attr_value.AttrValue.Value.Empty)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.attr_value.AttrValue] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.attr_value.AttrValue(
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[_root_.com.google.protobuf.ByteString]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.S)
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[_root_.scala.Long]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.I))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[scala.Option[_root_.scala.Float]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.F))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[scala.Option[_root_.scala.Boolean]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.B))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => org.tensorflow.framework.attr_value.AttrValue.Value.Type(org.tensorflow.framework.types.DataType.fromValue(__e.number))))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[scala.Option[org.tensorflow.framework.tensor_shape.TensorShapeProto]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.Shape))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[scala.Option[org.tensorflow.framework.tensor.TensorProto]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.Tensor))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[org.tensorflow.framework.attr_value.AttrValue.ListValue]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.List))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[scala.Option[org.tensorflow.framework.attr_value.NameAttrList]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.Func))
    .orElse[org.tensorflow.framework.attr_value.AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[scala.Option[_root_.scala.Predef.String]]).map(org.tensorflow.framework.attr_value.AttrValue.Value.Placeholder))
    .getOrElse(org.tensorflow.framework.attr_value.AttrValue.Value.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AttrValueProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AttrValueProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = org.tensorflow.framework.tensor_shape.TensorShapeProto
      case 8 => __out = org.tensorflow.framework.tensor.TensorProto
      case 1 => __out = org.tensorflow.framework.attr_value.AttrValue.ListValue
      case 10 => __out = org.tensorflow.framework.attr_value.NameAttrList
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq[_root_.scalapb.GeneratedMessageCompanion[_]](
    _root_.org.tensorflow.framework.attr_value.AttrValue.ListValue
  )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => org.tensorflow.framework.types.DataType
    }
  }
  lazy val defaultInstance = org.tensorflow.framework.attr_value.AttrValue(
  )
  sealed trait Value extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isS: _root_.scala.Boolean = false
    def isI: _root_.scala.Boolean = false
    def isF: _root_.scala.Boolean = false
    def isB: _root_.scala.Boolean = false
    def isType: _root_.scala.Boolean = false
    def isShape: _root_.scala.Boolean = false
    def isTensor: _root_.scala.Boolean = false
    def isList: _root_.scala.Boolean = false
    def isFunc: _root_.scala.Boolean = false
    def isPlaceholder: _root_.scala.Boolean = false
    def s: scala.Option[_root_.com.google.protobuf.ByteString] = None
    def i: scala.Option[_root_.scala.Long] = None
    def f: scala.Option[_root_.scala.Float] = None
    def b: scala.Option[_root_.scala.Boolean] = None
    def `type`: scala.Option[org.tensorflow.framework.types.DataType] = None
    def shape: scala.Option[org.tensorflow.framework.tensor_shape.TensorShapeProto] = None
    def tensor: scala.Option[org.tensorflow.framework.tensor.TensorProto] = None
    def list: scala.Option[org.tensorflow.framework.attr_value.AttrValue.ListValue] = None
    def func: scala.Option[org.tensorflow.framework.attr_value.NameAttrList] = None
    def placeholder: scala.Option[_root_.scala.Predef.String] = None
  }
  object Value extends {
    @SerialVersionUID(0L)
    case object Empty extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class S(value: _root_.com.google.protobuf.ByteString) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isS: _root_.scala.Boolean = true
      override def s: scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class I(value: _root_.scala.Long) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.scala.Long
      override def isI: _root_.scala.Boolean = true
      override def i: scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class F(value: _root_.scala.Float) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.scala.Float
      override def isF: _root_.scala.Boolean = true
      override def f: scala.Option[_root_.scala.Float] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class B(value: _root_.scala.Boolean) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.scala.Boolean
      override def isB: _root_.scala.Boolean = true
      override def b: scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class Type(value: org.tensorflow.framework.types.DataType) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = org.tensorflow.framework.types.DataType
      override def isType: _root_.scala.Boolean = true
      override def `type`: scala.Option[org.tensorflow.framework.types.DataType] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class Shape(value: org.tensorflow.framework.tensor_shape.TensorShapeProto) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = org.tensorflow.framework.tensor_shape.TensorShapeProto
      override def isShape: _root_.scala.Boolean = true
      override def shape: scala.Option[org.tensorflow.framework.tensor_shape.TensorShapeProto] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class Tensor(value: org.tensorflow.framework.tensor.TensorProto) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = org.tensorflow.framework.tensor.TensorProto
      override def isTensor: _root_.scala.Boolean = true
      override def tensor: scala.Option[org.tensorflow.framework.tensor.TensorProto] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class List(value: org.tensorflow.framework.attr_value.AttrValue.ListValue) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = org.tensorflow.framework.attr_value.AttrValue.ListValue
      override def isList: _root_.scala.Boolean = true
      override def list: scala.Option[org.tensorflow.framework.attr_value.AttrValue.ListValue] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Func(value: org.tensorflow.framework.attr_value.NameAttrList) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = org.tensorflow.framework.attr_value.NameAttrList
      override def isFunc: _root_.scala.Boolean = true
      override def func: scala.Option[org.tensorflow.framework.attr_value.NameAttrList] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class Placeholder(value: _root_.scala.Predef.String) extends org.tensorflow.framework.attr_value.AttrValue.Value {
      type ValueType = _root_.scala.Predef.String
      override def isPlaceholder: _root_.scala.Boolean = true
      override def placeholder: scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 9
    }
  }
  /** LINT.IfChange
    *
    * @param s
    *   "list(string)"
    * @param i
    *   "list(int)"
    * @param f
    *   "list(float)"
    * @param b
    *   "list(bool)"
    * @param type
    *   "list(type)"
    * @param shape
    *   "list(shape)"
    * @param tensor
    *   "list(tensor)"
    * @param func
    *   "list(attr)"
    */
  @SerialVersionUID(0L)
  final case class ListValue(
      s: _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.collection.Seq.empty,
      i: _root_.scala.collection.Seq[_root_.scala.Long] = _root_.scala.collection.Seq.empty,
      f: _root_.scala.collection.Seq[_root_.scala.Float] = _root_.scala.collection.Seq.empty,
      b: _root_.scala.collection.Seq[_root_.scala.Boolean] = _root_.scala.collection.Seq.empty,
      `type`: _root_.scala.collection.Seq[org.tensorflow.framework.types.DataType] = _root_.scala.collection.Seq.empty,
      shape: _root_.scala.collection.Seq[org.tensorflow.framework.tensor_shape.TensorShapeProto] = _root_.scala.collection.Seq.empty,
      tensor: _root_.scala.collection.Seq[org.tensorflow.framework.tensor.TensorProto] = _root_.scala.collection.Seq.empty,
      func: _root_.scala.collection.Seq[org.tensorflow.framework.attr_value.NameAttrList] = _root_.scala.collection.Seq.empty
      ) extends scalapb.GeneratedMessage with scalapb.Message[ListValue] with scalapb.lenses.Updatable[ListValue] {
      private[this] def iSerializedSize = {
        if (__iSerializedSizeField == 0) __iSerializedSizeField = {
          var __s: _root_.scala.Int = 0
          i.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
          __s
        }
        __iSerializedSizeField
      }
      @transient private[this] var __iSerializedSizeField: _root_.scala.Int = 0
      private[this] def fSerializedSize = {
        4 * f.size
      }
      private[this] def bSerializedSize = {
        1 * b.size
      }
      private[this] def typeSerializedSize = {
        if (__typeSerializedSizeField == 0) __typeSerializedSizeField = {
          var __s: _root_.scala.Int = 0
          `type`.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
          __s
        }
        __typeSerializedSizeField
      }
      @transient private[this] var __typeSerializedSizeField: _root_.scala.Int = 0
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        s.foreach(s => __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, s))
        if(i.nonEmpty) {
          val __localsize = iSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(f.nonEmpty) {
          val __localsize = fSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(b.nonEmpty) {
          val __localsize = bSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if(`type`.nonEmpty) {
          val __localsize = typeSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        shape.foreach(shape => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(shape.serializedSize) + shape.serializedSize)
        tensor.foreach(tensor => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(tensor.serializedSize) + tensor.serializedSize)
        func.foreach(func => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(func.serializedSize) + func.serializedSize)
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        s.foreach { __v =>
          _output__.writeBytes(2, __v)
        };
        if (i.nonEmpty) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(iSerializedSize)
          i.foreach(_output__.writeInt64NoTag)
        };
        if (f.nonEmpty) {
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(fSerializedSize)
          f.foreach(_output__.writeFloatNoTag)
        };
        if (b.nonEmpty) {
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(bSerializedSize)
          b.foreach(_output__.writeBoolNoTag)
        };
        if (`type`.nonEmpty) {
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(typeSerializedSize)
          `type`.foreach((_output__.writeEnumNoTag _).compose((_: org.tensorflow.framework.types.DataType).value))
        };
        shape.foreach { __v =>
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        tensor.foreach { __v =>
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
        func.foreach { __v =>
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.attr_value.AttrValue.ListValue = {
        val __s = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.com.google.protobuf.ByteString] ++= this.s)
        val __i = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Long] ++= this.i)
        val __f = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Float] ++= this.f)
        val __b = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Boolean] ++= this.b)
        val __type = (_root_.scala.collection.immutable.Vector.newBuilder[org.tensorflow.framework.types.DataType] ++= this.`type`)
        val __shape = (_root_.scala.collection.immutable.Vector.newBuilder[org.tensorflow.framework.tensor_shape.TensorShapeProto] ++= this.shape)
        val __tensor = (_root_.scala.collection.immutable.Vector.newBuilder[org.tensorflow.framework.tensor.TensorProto] ++= this.tensor)
        val __func = (_root_.scala.collection.immutable.Vector.newBuilder[org.tensorflow.framework.attr_value.NameAttrList] ++= this.func)
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 18 =>
              __s += _input__.readBytes()
            case 24 =>
              __i += _input__.readInt64()
            case 26 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __i += _input__.readInt64
              }
              _input__.popLimit(oldLimit)
            }
            case 37 =>
              __f += _input__.readFloat()
            case 34 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __f += _input__.readFloat
              }
              _input__.popLimit(oldLimit)
            }
            case 40 =>
              __b += _input__.readBool()
            case 42 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __b += _input__.readBool
              }
              _input__.popLimit(oldLimit)
            }
            case 48 =>
              __type += org.tensorflow.framework.types.DataType.fromValue(_input__.readEnum())
            case 50 => {
              val length = _input__.readRawVarint32()
              val oldLimit = _input__.pushLimit(length)
              while (_input__.getBytesUntilLimit > 0) {
                __type += org.tensorflow.framework.types.DataType.fromValue(_input__.readEnum)
              }
              _input__.popLimit(oldLimit)
            }
            case 58 =>
              __shape += _root_.scalapb.LiteParser.readMessage(_input__, org.tensorflow.framework.tensor_shape.TensorShapeProto.defaultInstance)
            case 66 =>
              __tensor += _root_.scalapb.LiteParser.readMessage(_input__, org.tensorflow.framework.tensor.TensorProto.defaultInstance)
            case 74 =>
              __func += _root_.scalapb.LiteParser.readMessage(_input__, org.tensorflow.framework.attr_value.NameAttrList.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        org.tensorflow.framework.attr_value.AttrValue.ListValue(
            s = __s.result(),
            i = __i.result(),
            f = __f.result(),
            b = __b.result(),
            `type` = __type.result(),
            shape = __shape.result(),
            tensor = __tensor.result(),
            func = __func.result()
        )
      }
      def clearS = copy(s = _root_.scala.collection.Seq.empty)
      def addS(__vs: _root_.com.google.protobuf.ByteString*): ListValue = addAllS(__vs)
      def addAllS(__vs: TraversableOnce[_root_.com.google.protobuf.ByteString]): ListValue = copy(s = s ++ __vs)
      def withS(__v: _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]): ListValue = copy(s = __v)
      def clearI = copy(i = _root_.scala.collection.Seq.empty)
      def addI(__vs: _root_.scala.Long*): ListValue = addAllI(__vs)
      def addAllI(__vs: TraversableOnce[_root_.scala.Long]): ListValue = copy(i = i ++ __vs)
      def withI(__v: _root_.scala.collection.Seq[_root_.scala.Long]): ListValue = copy(i = __v)
      def clearF = copy(f = _root_.scala.collection.Seq.empty)
      def addF(__vs: _root_.scala.Float*): ListValue = addAllF(__vs)
      def addAllF(__vs: TraversableOnce[_root_.scala.Float]): ListValue = copy(f = f ++ __vs)
      def withF(__v: _root_.scala.collection.Seq[_root_.scala.Float]): ListValue = copy(f = __v)
      def clearB = copy(b = _root_.scala.collection.Seq.empty)
      def addB(__vs: _root_.scala.Boolean*): ListValue = addAllB(__vs)
      def addAllB(__vs: TraversableOnce[_root_.scala.Boolean]): ListValue = copy(b = b ++ __vs)
      def withB(__v: _root_.scala.collection.Seq[_root_.scala.Boolean]): ListValue = copy(b = __v)
      def clearType = copy(`type` = _root_.scala.collection.Seq.empty)
      def addType(__vs: org.tensorflow.framework.types.DataType*): ListValue = addAllType(__vs)
      def addAllType(__vs: TraversableOnce[org.tensorflow.framework.types.DataType]): ListValue = copy(`type` = `type` ++ __vs)
      def withType(__v: _root_.scala.collection.Seq[org.tensorflow.framework.types.DataType]): ListValue = copy(`type` = __v)
      def clearShape = copy(shape = _root_.scala.collection.Seq.empty)
      def addShape(__vs: org.tensorflow.framework.tensor_shape.TensorShapeProto*): ListValue = addAllShape(__vs)
      def addAllShape(__vs: TraversableOnce[org.tensorflow.framework.tensor_shape.TensorShapeProto]): ListValue = copy(shape = shape ++ __vs)
      def withShape(__v: _root_.scala.collection.Seq[org.tensorflow.framework.tensor_shape.TensorShapeProto]): ListValue = copy(shape = __v)
      def clearTensor = copy(tensor = _root_.scala.collection.Seq.empty)
      def addTensor(__vs: org.tensorflow.framework.tensor.TensorProto*): ListValue = addAllTensor(__vs)
      def addAllTensor(__vs: TraversableOnce[org.tensorflow.framework.tensor.TensorProto]): ListValue = copy(tensor = tensor ++ __vs)
      def withTensor(__v: _root_.scala.collection.Seq[org.tensorflow.framework.tensor.TensorProto]): ListValue = copy(tensor = __v)
      def clearFunc = copy(func = _root_.scala.collection.Seq.empty)
      def addFunc(__vs: org.tensorflow.framework.attr_value.NameAttrList*): ListValue = addAllFunc(__vs)
      def addAllFunc(__vs: TraversableOnce[org.tensorflow.framework.attr_value.NameAttrList]): ListValue = copy(func = func ++ __vs)
      def withFunc(__v: _root_.scala.collection.Seq[org.tensorflow.framework.attr_value.NameAttrList]): ListValue = copy(func = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 2 => s
          case 3 => i
          case 4 => f
          case 5 => b
          case 6 => `type`.map(_.javaValueDescriptor)(_root_.scala.collection.breakOut)
          case 7 => shape
          case 8 => tensor
          case 9 => func
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 2 => _root_.scalapb.descriptors.PRepeated(s.map(_root_.scalapb.descriptors.PByteString)(_root_.scala.collection.breakOut))
          case 3 => _root_.scalapb.descriptors.PRepeated(i.map(_root_.scalapb.descriptors.PLong)(_root_.scala.collection.breakOut))
          case 4 => _root_.scalapb.descriptors.PRepeated(f.map(_root_.scalapb.descriptors.PFloat)(_root_.scala.collection.breakOut))
          case 5 => _root_.scalapb.descriptors.PRepeated(b.map(_root_.scalapb.descriptors.PBoolean)(_root_.scala.collection.breakOut))
          case 6 => _root_.scalapb.descriptors.PRepeated(`type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor))(_root_.scala.collection.breakOut))
          case 7 => _root_.scalapb.descriptors.PRepeated(shape.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 8 => _root_.scalapb.descriptors.PRepeated(tensor.map(_.toPMessage)(_root_.scala.collection.breakOut))
          case 9 => _root_.scalapb.descriptors.PRepeated(func.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = org.tensorflow.framework.attr_value.AttrValue.ListValue
  }
  
  object ListValue extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.attr_value.AttrValue.ListValue] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.attr_value.AttrValue.ListValue] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.tensorflow.framework.attr_value.AttrValue.ListValue = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      org.tensorflow.framework.attr_value.AttrValue.ListValue(
        __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]],
        __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.scala.Long]],
        __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.scala.Float]],
        __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.scala.Boolean]],
        __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => org.tensorflow.framework.types.DataType.fromValue(__e.getNumber))(_root_.scala.collection.breakOut),
        __fieldsMap.getOrElse(__fields.get(5), Nil).asInstanceOf[_root_.scala.collection.Seq[org.tensorflow.framework.tensor_shape.TensorShapeProto]],
        __fieldsMap.getOrElse(__fields.get(6), Nil).asInstanceOf[_root_.scala.collection.Seq[org.tensorflow.framework.tensor.TensorProto]],
        __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[_root_.scala.collection.Seq[org.tensorflow.framework.attr_value.NameAttrList]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.attr_value.AttrValue.ListValue] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.attr_value.AttrValue.ListValue(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.collection.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.collection.Seq[_root_.scala.Float]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.collection.Seq[_root_.scala.Boolean]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.collection.Seq.empty).map(__e => org.tensorflow.framework.types.DataType.fromValue(__e.number))(_root_.scala.collection.breakOut),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.collection.Seq[org.tensorflow.framework.tensor_shape.TensorShapeProto]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.collection.Seq[org.tensorflow.framework.tensor.TensorProto]]).getOrElse(_root_.scala.collection.Seq.empty),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.collection.Seq[org.tensorflow.framework.attr_value.NameAttrList]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.attr_value.AttrValue.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.attr_value.AttrValue.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 7 => __out = org.tensorflow.framework.tensor_shape.TensorShapeProto
        case 8 => __out = org.tensorflow.framework.tensor.TensorProto
        case 9 => __out = org.tensorflow.framework.attr_value.NameAttrList
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => org.tensorflow.framework.types.DataType
      }
    }
    lazy val defaultInstance = org.tensorflow.framework.attr_value.AttrValue.ListValue(
    )
    implicit class ListValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue.ListValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.attr_value.AttrValue.ListValue](_l) {
      def s: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.com.google.protobuf.ByteString]] = field(_.s)((c_, f_) => c_.copy(s = f_))
      def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.scala.Long]] = field(_.i)((c_, f_) => c_.copy(i = f_))
      def f: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.scala.Float]] = field(_.f)((c_, f_) => c_.copy(f = f_))
      def b: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.scala.Boolean]] = field(_.b)((c_, f_) => c_.copy(b = f_))
      def `type`: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.tensorflow.framework.types.DataType]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def shape: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.tensorflow.framework.tensor_shape.TensorShapeProto]] = field(_.shape)((c_, f_) => c_.copy(shape = f_))
      def tensor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.tensorflow.framework.tensor.TensorProto]] = field(_.tensor)((c_, f_) => c_.copy(tensor = f_))
      def func: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[org.tensorflow.framework.attr_value.NameAttrList]] = field(_.func)((c_, f_) => c_.copy(func = f_))
    }
    final val S_FIELD_NUMBER = 2
    final val I_FIELD_NUMBER = 3
    final val F_FIELD_NUMBER = 4
    final val B_FIELD_NUMBER = 5
    final val TYPE_FIELD_NUMBER = 6
    final val SHAPE_FIELD_NUMBER = 7
    final val TENSOR_FIELD_NUMBER = 8
    final val FUNC_FIELD_NUMBER = 9
  }
  
  implicit class AttrValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.attr_value.AttrValue](_l) {
    def s: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getS)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.S(f_)))
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getI)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.I(f_)))
    def f: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.getF)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.F(f_)))
    def b: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getB)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.B(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.types.DataType] = field(_.getType)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Type(f_)))
    def shape: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.tensor_shape.TensorShapeProto] = field(_.getShape)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Shape(f_)))
    def tensor: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.tensor.TensorProto] = field(_.getTensor)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Tensor(f_)))
    def list: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue.ListValue] = field(_.getList)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.List(f_)))
    def func: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.NameAttrList] = field(_.getFunc)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Func(f_)))
    def placeholder: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPlaceholder)((c_, f_) => c_.copy(value = org.tensorflow.framework.attr_value.AttrValue.Value.Placeholder(f_)))
    def value: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue.Value] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val S_FIELD_NUMBER = 2
  final val I_FIELD_NUMBER = 3
  final val F_FIELD_NUMBER = 4
  final val B_FIELD_NUMBER = 5
  final val TYPE_FIELD_NUMBER = 6
  final val SHAPE_FIELD_NUMBER = 7
  final val TENSOR_FIELD_NUMBER = 8
  final val LIST_FIELD_NUMBER = 1
  final val FUNC_FIELD_NUMBER = 10
  final val PLACEHOLDER_FIELD_NUMBER = 9
}
